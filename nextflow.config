nextflow.enable.moduleBinaries = true

profiles {
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
   }
   docker_gpu {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '--gpus all -u $(id -u):$(id -g)'
    }

}

params {
    input = false
    output = "results"
    lean_output = false
    kmeans_nb_regions = 128
    resampling_voxel_size = 2
    b0_threshold = 10
    dwi_shell_tolerance = 50
    max_dti_bvalue = 1200
    min_fodf_bvalue = 700
    fa_mask_upper_threshold = 0.7
    fa_mask_lower_threshold = 0.3
    fill_holes_radius = 10
    nb_points = 4

    extract_JHU=false
    extract_bundleparc_labels=false
    extract_bundleparc_binary=false
    out_json = "features-128.json"
    max_cpus_per_task = 1
    small_ram_allocation = 3.GB
    large_ram_allocation = 8.GB
}

manifest {
    name = "beyond_FA"
    description = "beyond FA - SCIL"
    version = "0.0.0"
}

process {
    withName: "RESAMPLE" {
        ext.voxel_size = params.resampling_voxel_size
    }

    withName: "BET" {
        ext.crop = true
        ext.dilate = false
    }

    withName: "DTI_POST_FW" {
        ext.ad = false
        ext.evecs = false
        ext.evals = false
        ext.fa = true
        ext.ga = false
        ext.rgb = false
        ext.md = true
        ext.mode = false
        ext.norm = false
        ext.rd = false
        ext.tensor = false
        ext.nonphysical = false
        ext.pulsation = false
        ext.residual = false
        ext.b0_thr_extract_b0 = params.b0_threshold
        ext.dwi_shell_tolerance = params.dwi_shell_tolerance
        ext.max_dti_shell_value = params.max_dti_bvalue
        ext.run_qc = false
    }

    withName: "FRF" {
        ext.b0_thr_extract_b0 = params.b0_threshold
        ext.dwi_shell_tolerance = params.dwi_shell_tolerance
        ext.max_dti_shell_value = params.max_dti_bvalue
        ext.fa = 0.7
        ext.fa_min = 0.5
        ext.nvox_min = 300
        ext.roi_radius = 20
        ext.set_frf = false
        ext.precision = 8
    }

    withName: "FA_LTHRESHOLD" {
        ext.operation = "lower_threshold_eq"
        ext.value = params.fa_mask_lower_threshold
        ext.data_type = "uint8"
        ext.suffix = "fa_lt"
    }

    withName: "FODF" {
        ext.b0_thr_extract_b0 = params.b0_threshold
        ext.dwi_shell_tolerance = params.dwi_shell_tolerance
        ext.min_fodf_shell_value = params.min_fodf_bvalue
        ext.sh_order = 8
        ext.sh_basis = "descoteaux07"
        ext.fa_threshold = 0.1
        ext.md_threshold = 0.003
        ext.relative_threshold = 0.1
        ext.absolute_peaks = true
        ext.peaks = false
        ext.peak_values = false
        ext.peak_indices = false
        ext.afd_max = false
        ext.afd_total = false
        ext.afd_sum = false
        ext.nufo = false

        memory = params.large_ram_allocation
    }

    withName: "REGISTRATION_ANTS" {
        ext.quick = true
    }

    memory = params.small_ram_allocation
    withLabel: "process_high_memory" {
        memory = params.large_ram_allocation
    }

    withLabel: "process_high|process_medium" {
        cpus = params.max_cpus_per_task
    }

    withName: "BUNDLEPARC" {
        ext.nb_points = params.nb_points
        memory = params.large_ram_allocation
    }

   withName: "TRANSFORM_LABELS.*" {
        ext.interpolation = "MultiLabel"
        ext.output_dtype = "short"
    }

    withName: "EXTRACT_METRICS_JHU" {
        publishDir = [
            path: { "${params.output}/" },
            saveAs: {
                filename ->
                if ( filename.contains("*json") && params.extract_JHU) { "$params.out_json" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
    }

    withName: "EXTRACT_METRICS_BUNDLEPARC_LABELS" {
        publishDir = [
            path: { "${params.output}}/" },
            saveAs: {
                filename ->
                if ( filename.contains("*json") && params.extract_bundleparc_labels) { "$params.out_json" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
        ext.binarize_labels = false
        ext.all_labels = false
        ext.nb_pts = params.nb_points
    }

    withName: "EXTRACT_METRICS_BUNDLEPARC_BINARY" {
        publishDir = [
            path: { "${params.output}/" },
            saveAs: {
                filename ->
                if ( filename.contains("*json") && params.extract_bundleparc_binary) { "$params.out_json" }
                else if ( filename.contains("versions.yml") ) { null }
                else { params.lean_output ? null : filename }
            }
        ]
        ext.binarize_labels = true
        ext.all_labels = true
        ext.nb_pts = 1
    }
}